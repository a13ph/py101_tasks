"""Задания по ветвлениям, итерациям и вводу данных."""
import keyword


# напиши функцию, которая принимает на вход любое
# количество чисел и сообщает, есть ли среди них чётное

# К чёрту циклы
def contains_even(list):
    return any([item for item in list if item % 2 == 0])


# используй тернарный оператор, чтобы вызвать функцию
# если возраст больше 21 года, в противном случае верни
# сообщение "Мы не продаём алкоголь несовершеннолетним."
def sell_alcohol():
    print("Алкоголь продан")


age = 17
print("Мы не продаём алкоголь несовершеннолетним."
      if age < 21 else sell_alcohol())


# напиши функцию, которая проверит, является ли строка ключевым словом в Питоне
# тебе понадобится модуль keyword, импортируй его и изучи с помощью dir()
def is_keyword(string):
    keyword.iskeyword(string)


# напиши функцию, которая возвращает тип данных на русском языке:
# число, строка, булевый, None, список, кортеж, множество, словарь
# пример: get_type("что-то") возвращает "Это строка."
# пример2: get_type(42) возвращает "Это словарь."
def get_type(a):
    case = {
        "<class 'str'>": "строка",
        "<class 'int'>": "число",
        "<class 'dict'>": "cловарь",
        "<class 'bool'>": "булево значение",
        "<class 'NoneType'>": "None",
        "<class 'list'>": "список",
        "<class 'tuple'>": "кортеж",
        "<class 'set'>": "множество",
    }
    return "Это " + case[repr(type(a))]


assert (get_type(42) == "Это число"), "42 это число"
assert (get_type("что-то") == "Это строка"), "'что-то' это строка"
assert (get_type({1: "a", 2: "b"}) == "Это cловарь")
assert (get_type((1, 2)) == "Это кортеж")
assert (get_type({1, 2}) == "Это множество")
assert (get_type([1, 2, 3]) == "Это список")
assert (get_type(None) == "Это None")
assert (get_type(True) == "Это булево значение")
